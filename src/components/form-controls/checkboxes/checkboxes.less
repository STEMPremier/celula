@import '../../../styles/celula';

.ce-checkbox {
  padding-left: 1rem;
  fieldset {
    border: none;
    width: 225px;
    height: 100%;
    display: flex;
    justify-content: flex-start;
  }
  legend {
    padding: 3.0rem 0 2.2rem .6rem;
  }
  label {
    padding-left: 4rem;
    padding-top: 13px;
    position: absolute;
    font-size: 1.4rem;
  }
  input {
    opacity: 0;
  }

  .ce-checkbox--box {
    margin: 0.5rem;
    position: relative;
    cursor: pointer;
    user-select: none;
    // default checkbox sizes (unchecked and enabled outline color)
    input:not(:checked) + label {
      &::before{
        content: '';
        display: inline-block;
        position: absolute;
        left: -1rem;
        top: 8px;
        border-radius: 3px;
        border: 1px solid #B2B2B2;
        background-color: #FBFBFB;
        height: 20px;
        width: 20px;
        box-sizing: border-box;
      }
    }
    // checked default 
    input:checked + label {
      &::before{
        content: '';
        display: inline-block;
        position: absolute;
        left: -1rem;
        top: 8px;
        border-radius: 3px;
        // border: 1x solid #192344;
        background-color:#192344;
        // background-color: #FFFFFF;
        height: 20px;
        width: 20px;
        box-sizing: border-box;
      }
      &::after {
        content: '';
        position: absolute;
        display: inline-block;
        left: -9px;
        top: 9px;
        border-radius: 3px;
        width: 8px;
        height: 8px;
        background-color:#192344; 
        border: 5px solid  #ffffff ;
      }
    }
    // state changes with new background image to appear on entire checkbox
    // first set state defaults with size, position, and default color for unchecked 
    .ce-checkbox--background {
        height: 36px;
        width: 36px;
        margin-left: -18px;
        margin-top: -3px;
        border-radius: 50%;
        background-position: -9999px -9999px;
        // on state changes, only alter color and background-positoin so that it can inherit the rest 
        &:hover{
          background-color: #E5E5E5;
          background-position: center top !important;
        }
        &:focus {
          background-color: #CCCCCC;
          background-position: center top !important;
        }
        &:active {
          background-color: #B3B3B3;
          background-position: center top !important;
        }
      }
  }

  &.ce-checkbox--disabled { 
    pointer-events: none;
    color: #DBDBDB;
  }
}

.ce-checkbox--error{
  // error mode not checked 
  border: .5rem solid @error-text;
  border-radius: .5rem;
  color:@error-text;
  // this error text handles when I want it shown inside the radio--error
  .ce-checkbox-error--text{
    position: absolute;
    background-color: white;
    padding: .5rem;
    line-height: 1.2rem;
    margin-left: 77%;
    bottom: -4%;
    @media screen {
      @media (max-width: 768px) {
       margin-left: 50%;
      }
    }
  }
};